<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans     
                        http://www.springframework.org/schema/beans/spring-beans-4.0.xsd    
                        http://www.springframework.org/schema/mvc    
                        http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd  
                        http://www.springframework.org/schema/tx  
                        http://www.springframework.org/schema/tx/spring-tx-4.0.xsd  
                        http://www.springframework.org/schema/aop    
                        http://www.springframework.org/schema/aop/spring-aop-4.0.xsd     
                        http://www.springframework.org/schema/context     
                        http://www.springframework.org/schema/context/spring-context.xsd">

	<!--创建数据源-连接池 -->
	<bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="oracle.jdbc.driver.OracleDriver" />
		<property name="url" value="jdbc:oracle:thin:@localhost:1521:orcl" />
		<property name="username" value="scott" />
		<property name="password" value="tiger" />
	</bean>


	<!--创建SQLSessionFactory类对象 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:mybatis.xml" />
	</bean>

	<!-- 自动扫描指定包下的接口对象 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<!-- 扫描产生mapper接口文件 -->
		<property name="basePackage" value="cn.etc.Dao"></property>
		<!-- 生成sqlSessionFactory 对象，并生成SqlSession对象，可以通过SqlSession反射Mapper接口对象 -->
		<!-- 后台只需要使用同类型Mapper属性接收就可以使用，但是需要配合注解@Autowired -->
		<property name="sqlSessionFactory" ref="sqlSessionFactory"></property>
	</bean>
	
	<!--扫描包 -->
	<context:component-scan base-package="cn.etc" />

	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver"
		id="jspViewResolver">
		<property value=".jsp" name="suffix" />
	</bean>
    
	<!--解析对象为json文本  -->
	<bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
	        <property name="messageConverters">
	               <list>
		    <bean class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter"/>
	               </list>
	        </property>
	</bean>

</beans>